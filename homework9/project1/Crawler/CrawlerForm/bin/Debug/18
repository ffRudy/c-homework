<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta property="og:description" content="前些天去考科目二，感觉经历了一场不是高考却胜似高考的考试（10年前的5分之差， 还是难以释怀）！&#xD;&#xA;一行八人，就我学的时间最少（4天，8人一辆车），教练都觉得我肯定还得再来一次！&#xD;&#xA;靠着运气和信念，惊" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>JS/CSS缓存杀手——VS插件 - 2J - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=-oFz8B4m7JhHaZzdTkzPza2oLZNDRR8obnCz6w7OHbU" />
    <link id="MainCss" rel="stylesheet" href="/skins/imetro_hd/bundle-imetro_hd.min.css?v=gS0FloTY-RBJQcN3GCAKG6fAr6HHKtDMTw60VxjN79c" />
    <link type="text/css" rel="stylesheet" href="https://www.cnblogs.com/jijunjian/custom.css?v=WI3eRo7midbwNzmh7EMewRylXm0=" />
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/imetro_hd/bundle-imetro_hd-mobile.min.css?v=VacchHeVg6bp3gCO8NqMH8D8fhA8iyRbb0JgoDUvn4o" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/jijunjian/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/jijunjian/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/jijunjian/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=uk-as-QYRHtjaAbeEigAktvhwf01NRrnle-6exg65Ak"></script>
    <script>
        var currentBlogId = 139716;
        var currentBlogApp = 'jijunjian';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'iMetro_HD';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/jijunjian/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/jijunjian/">成为一名优秀的程序员</a>
</h1>
<h2>

</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/jijunjian/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/2J">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/jijunjian/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
25&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
424</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2" href="https://www.cnblogs.com/jijunjian/p/5678003.html">JS/CSS缓存杀手——VS插件</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
    <div id="cnblogs_post_description" style="display: none">
        前些天去考科目二，感觉经历了一场不是高考却胜似高考的考试（10年前的5分之差， 还是难以释怀）！
一行八人，就我学的时间最少（4天，8人一辆车），教练都觉得我肯定还得再来一次！
靠着运气和信念，惊险的通过了侧方停车和倒车入库，终于还是抚慰了一下10年前那颗年轻的心！
感慨完毕，回归主题
    </div>
<div id="cnblogs_post_body" class="blogpost-body ">
    <h1 class="postTitle">背景</h1>
<p>　　 前些天去考科目二，感觉经历了一场不是高考却胜似高考的考试（10年前的5分之差， 还是难以释怀）！</p>
<p>　 &nbsp; &nbsp;一行八人，就我学的时间最少（4天，8人一辆车），教练都觉得我肯定还得再来一次！</p>
<p>　　 靠着运气和信念，惊险的通过了侧方停车和倒车入库，终于还是抚慰了一下10年前那颗年轻的心！</p>
<p>　　　　<img src="https://images2015.cnblogs.com/blog/88102/201607/88102-20160717142012092-192399923.jpg" alt="" /></p>
<p>&nbsp;</p>
<p>　　&nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;感慨完毕，回归主题&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;终于修改完了客户提交的bugs，发布、更新、测试、邮件通知，悠哉悠哉的浏览博客园...然后客户来了...</p>
<p>　　 客户：我提的需求怎么都没修改，这个按钮颜色也没变，点击效果还是以前的，那个界面也没修改...!@#$%^&amp;*...</p>
<p>　　&nbsp;　我：我这里都正常的，截图给你看下...</p>
<p>　　 客户：要不你远程看下什么问题。</p>
<p>　　　 我：哦，浏览器缓存没有更新，你强制刷新下</p>
<p>　　 客户：怎么强制刷新?</p>
<p>　　　 我：ctrl+f5，手机上...!@#$%^&amp;*...</p>
<p>　　&nbsp;客户：(&deg; ?&deg;)~@</p>
<p>　　</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;以上对话来源生活，如有雷同，实属正常&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;</p>
<p>&nbsp;</p>
<p>&nbsp; &nbsp; &nbsp; &nbsp; 每次更新后，总会产生这样的对话，每次解释半天都是无功而返，最后还是一个个的给每个js,css文件加上 ?v=111 这样的字样，劳心又费神，还不讨好。</p>
<p>　　 &nbsp;然后引入combres 以为可以万事大吉了，增加js和css引用麻烦，每次去修改配置也是麻烦，同事也都不愿意用了。</p>
<p>　　 &nbsp;最后，只能要求大家修改时都添加 ?v=xxx 的字样，律己容易律人难，再则操作确实也不方便，大家更不愿意弄了。</p>
<p>　　 &nbsp;你不去修改，问题就在那里，只增不减...</p>
<p>　　 &nbsp;</p>
<h1 class="postTitle">快捷输入</h1>
<p>　　后来发现VS有这么一个功能，可以把代码片段拖到工具栏，点击可以自动快捷输入，效果如下，用起来非常方便，当时就想如果js和css版本号也可以有快捷的输入，大家也会更愿意去操作吧，但是因为这个内容是固定的，所以用起来还是不太方便。于是，路漫漫其修远兮，吾将上下而求索！</p>
<p>　 &nbsp; &nbsp;<img src="https://images2015.cnblogs.com/blog/88102/201607/88102-20160717112815014-1333279271.gif" alt="" /></p>
<p>&nbsp;　　</p>
<p>　　</p>
<h1 class="postTitle">VS插件开发---自己动手，丰衣足食</h1>
<p>　　　直到看到这个 <a href="http://www.cnblogs.com/LCHL/p/5519520.html" target="_blank">《强迫症的福利&mdash;&mdash;我的第一个VS插件，对using排序！》</a>&nbsp;文章，我就知道了：只要你想，就有可能。至于安装&nbsp;VisualStudio SDK，创建项目之类的，前面的文章已经讲得蛮多了。有兴趣的可以移步前面的文章链接哈！</p>
<p>　　　配置要修改的不多，基本就是图标、快捷键、菜单名称等。以下是我的完整配置文件</p>
<div class="cnblogs_Highlighter">
<pre class="brush:html;collapse:true;;gutter:true;">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;CommandTable xmlns="http://schemas.microsoft.com/VisualStudio/2005-10-18/CommandTable" xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;

  &lt;!--  This is the file that defines the actual layout and type of the commands.
        It is divided in different sections (e.g. command definition, command
        placement, ...), with each defining a specific set of properties.
        See the comment before each section for more details about how to
        use it. --&gt;

  &lt;!--  The VSCT compiler (the tool that translates this file into the binary
        format that VisualStudio will consume) has the ability to run a preprocessor
        on the vsct file; this preprocessor is (usually) the C++ preprocessor, so
        it is possible to define includes and macros with the same syntax used
        in C++ files. Using this ability of the compiler here, we include some files
        defining some of the constants that we will use inside the file. --&gt;

  &lt;!--This is the file that defines the IDs for all the commands exposed by VisualStudio. --&gt;
  &lt;Extern href="stdidcmd.h"/&gt;

  &lt;!--This header contains the command ids for the menus provided by the shell. --&gt;
  &lt;Extern href="vsshlids.h"/&gt;

  &lt;!--The Commands section is where commands, menus, and menu groups are defined.
      This section uses a Guid to identify the package that provides the command defined inside it. --&gt;
  &lt;Commands package="guidfillVersionPackage"&gt;
    &lt;!-- Inside this section we have different sub-sections: one for the menus, another
    for the menu groups, one for the buttons (the actual commands), one for the combos
    and the last one for the bitmaps used. Each element is identified by a command id that
    is a unique pair of guid and numeric identifier; the guid part of the identifier is usually
    called "command set" and is used to group different command inside a logically related
    group; your package should define its own command set in order to avoid collisions
    with command ids defined by other packages. --&gt;

    &lt;!-- In this section you can define new menu groups. A menu group is a container for
         other menus or buttons (commands); from a visual point of view you can see the
         group as the part of a menu contained between two lines. The parent of a group
         must be a menu. --&gt;
    &lt;Groups&gt;
      &lt;Group guid="guidfillVersionPackageCmdSet" id="MyMenuGroup" priority="0x0600"&gt;
        &lt;Parent guid="guidSHLMainMenu" id="IDM_VS_MENU_TOOLS"/&gt;
      &lt;/Group&gt;
    &lt;/Groups&gt;

    &lt;!--Buttons section. --&gt;
    &lt;!--This section defines the elements the user can interact with, like a menu command or a button
        or combo box in a toolbar. --&gt;
    &lt;Buttons&gt;
      &lt;!--To define a menu group you have to specify its ID, the parent menu and its display priority.
          The command is visible and enabled by default. If you need to change the visibility, status, etc, you can use
          the CommandFlag node.
          You can add more than one CommandFlag node e.g.:
              &lt;CommandFlag&gt;DefaultInvisible&lt;/CommandFlag&gt;
              &lt;CommandFlag&gt;DynamicVisibility&lt;/CommandFlag&gt;
          If you do not want an image next to your command, remove the Icon node /&gt; --&gt;
      &lt;Button guid="guidfillVersionPackageCmdSet" id="fillVersionId" priority="0x0100" type="Button"&gt;
        &lt;Parent guid="guidfillVersionPackageCmdSet" id="MyMenuGroup" /&gt;
        &lt;Icon guid="guidImages" id="bmpPic1" /&gt;
        &lt;Strings&gt;
          &lt;ButtonText&gt;设置版本号&lt;/ButtonText&gt;
        &lt;/Strings&gt;
      &lt;/Button&gt;
      
    &lt;/Buttons&gt;

    &lt;!--The bitmaps section is used to define the bitmaps that are used for the commands.--&gt;
    &lt;Bitmaps&gt;
      &lt;!--  The bitmap id is defined in a way that is a little bit different from the others:
            the declaration starts with a guid for the bitmap strip, then there i sthe resource id of the
            bitmap strip containing the bitmaps and then there are the numeric ids of the elements used
            inside a button definition. An important aspect of this declaration is that the element id
            must be the actual index (1-based) of the bitmap inside the bitmap strip. --&gt;
      &lt;Bitmap guid="guidImages" href="Resources\fillVersion.png" usedList="bmpPic1"/&gt;
    &lt;/Bitmaps&gt;
   
  &lt;/Commands&gt;
  &lt;KeyBindings&gt;
    &lt;!-- 设置快捷键 alt+J. --&gt;
  &lt;KeyBinding guid="guidfillVersionPackageCmdSet" id="fillVersionId" editor="guidVSStd97" key1="J" mod1="ALT" /&gt;
  &lt;/KeyBindings&gt;
  &lt;Symbols&gt;
    &lt;!-- This is the package guid. --&gt;
    &lt;GuidSymbol name="guidfillVersionPackage" value="{67c49ffd-7eca-4805-9b45-a837fb03a08c}" /&gt;

    &lt;!-- This is the guid used to group the menu commands together --&gt;
    &lt;GuidSymbol name="guidfillVersionPackageCmdSet" value="{af86a8d5-ac26-40b6-be11-0fcf3d9bd974}"&gt;
      &lt;IDSymbol name="MyMenuGroup" value="0x1020" /&gt;
      &lt;IDSymbol name="fillVersionId" value="0x0100" /&gt;
    &lt;/GuidSymbol&gt;

    &lt;GuidSymbol name="guidImages" value="{da500753-6754-4737-82c4-2b65d5e9ad59}" &gt;
      &lt;IDSymbol name="bmpPic1" value="1" /&gt;
      &lt;IDSymbol name="bmpPic2" value="2" /&gt;
      &lt;IDSymbol name="bmpPicSearch" value="3" /&gt;
      &lt;IDSymbol name="bmpPicX" value="4" /&gt;
      &lt;IDSymbol name="bmpPicArrows" value="5" /&gt;
      &lt;IDSymbol name="bmpPicStrikethrough" value="6" /&gt;
    &lt;/GuidSymbol&gt;
  &lt;/Symbols&gt;
&lt;/CommandTable&gt;
</pre>
</div>
<p>　　</p>
<p>　　搭好项目，配置完成，我们开始上菜了。</p>
<h1 class="postTitle">小菜第一版</h1>
<p>　　我们知道菜单的逻辑都在&nbsp;fillVersion.cs &nbsp;-》MenuItemCallback 中实现</p>
<p>　　第一版功能非常简单，就是简单的输入 ?v=yyyyMMddss，表面上已经实现了我的想法，确实也比原来方便多了，只要按下快捷键就完成原来多次输入的效果，代码如下</p>
<p>&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;">1</span> <span style="color: #0000ff;">var</span> dte = <span style="color: #0000ff;">this</span>.ServiceProvider.GetService(<span style="color: #0000ff;">typeof</span>(DTE)) <span style="color: #0000ff;">as</span> DTE;
<span style="color: #008080;">2</span> <span style="color: #0000ff;">var</span> selection = dte.ActiveDocument.Selection <span style="color: #0000ff;">as</span> TextSelection;<span style="color: #008000;">//</span><span style="color: #008000;">当前文档中选中的部分</span>
<span style="color: #008080;">3</span> <span style="color: #0000ff;">if</span> (selection == <span style="color: #0000ff;">null</span><span style="color: #000000;">)
</span><span style="color: #008080;">4</span> <span style="color: #000000;">{ 
</span><span style="color: #008080;">5</span>    <span style="color: #0000ff;">return</span><span style="color: #000000;">;
</span><span style="color: #008080;">6</span> <span style="color: #000000;">}</span>
<span style="color: #008080;">8</span> s<span style="color: #0000ff;">tring</span> versionstr = <span style="color: #800000;">"</span><span style="color: #800000;">?v=</span><span style="color: #800000;">"</span> + DateTime.Now.ToString(<span style="color: #800000;">"</span><span style="color: #800000;">yyyyMMddss</span><span style="color: #800000;">"</span><span style="color: #000000;">);
</span><span style="color: #008080;">9</span> selection.Insert(versionstr, (<span style="color: #0000ff;">int</span>)vsInsertFlags.vsInsertFlagsCollapseToEnd);<span style="color: #008000;">//</span><span style="color: #008000;">重新写入文档</span></pre>
</div>
<p>&nbsp;</p>
<p>　　</p>
<p>　 &nbsp;效果如下：</p>
<p>　　<img src="https://images2015.cnblogs.com/blog/88102/201607/88102-20160717115743451-609830857.gif" alt="" /></p>
<p>&nbsp;</p>
<p>　　但是问题来了：</p>
<p>　　A、光标一定要定位到文件名后面，这完全是在制造麻烦么?</p>
<p>　　B、我要同时给几个js添加版本号怎么办？一个个添加？这还是在制造麻烦么？</p>
<p>　　C、我要同时给js和css添加版本号又怎么办呢？</p>
<p>　　...</p>
<p>　　带着这些疑问，我开始了新的起航。</p>
<p>&nbsp;</p>
<h1 class="postTitle">小菜最终版</h1>
<p>&nbsp;　　在解决第一版提出的问题，首先我们得解析我们选中的内容，随便百度一下，我就发现了&nbsp;HtmlAgilityPack，后面的工作就简单了，便利选中&nbsp;script和link&nbsp;标签，获取&nbsp;href，src 属性，加个?v=yyyyMMddss 就OK了。</p>
<p>　　 这个版本，我们可以直接多个标签批量设置版本号了，操作就更方便了。使用方便了，同事自然就想用了，都不用我去要求了。</p>
<p>　　 直接上代码吧，大家一看就了然了，没有注释哈，代码就是最好的注释了。</p>
<p>　　&nbsp;</p>
<div class="cnblogs_code">
<pre><span style="color: #008080;"> 1</span> <span style="color: #0000ff;">var</span> dte = <span style="color: #0000ff;">this</span>.ServiceProvider.GetService(<span style="color: #0000ff;">typeof</span>(DTE)) <span style="color: #0000ff;">as</span><span style="color: #000000;"> DTE;
</span><span style="color: #008080;"> 2</span> <span style="color: #0000ff;">var</span> selection = dte.ActiveDocument.Selection <span style="color: #0000ff;">as</span> TextSelection;<span style="color: #008000;">//</span><span style="color: #008000;">当前文档中选中的部分</span>
<span style="color: #008080;"> 3</span> <span style="color: #0000ff;">if</span> (selection == <span style="color: #0000ff;">null</span><span style="color: #000000;">)
</span><span style="color: #008080;"> 4</span> <span style="color: #000000;">{
</span><span style="color: #008080;"> 5</span>     <span style="color: #0000ff;">return</span><span style="color: #000000;">;
</span><span style="color: #008080;"> 6</span> <span style="color: #000000;">}
</span><span style="color: #008080;"> 7</span> 
<span style="color: #008080;"> 8</span>  HtmlDocument doc = <span style="color: #0000ff;">new</span><span style="color: #000000;"> HtmlDocument();
</span><span style="color: #008080;"> 9</span> <span style="color: #000000;"> doc.LoadHtml(selection.Text);
</span><span style="color: #008080;">10</span> 
<span style="color: #008080;">11</span>  HtmlNodeCollection script = doc.DocumentNode.SelectNodes(<span style="color: #800000;">"</span><span style="color: #800000;">//script</span><span style="color: #800000;">"</span><span style="color: #000000;">);
</span><span style="color: #008080;">12</span>  HtmlNodeCollection link = doc.DocumentNode.SelectNodes(<span style="color: #800000;">"</span><span style="color: #800000;">//link</span><span style="color: #800000;">"</span><span style="color: #000000;">);
</span><span style="color: #008080;">13</span> 
<span style="color: #008080;">14</span>  <span style="color: #0000ff;">string</span> newcontent = <span style="color: #800000;">""</span><span style="color: #000000;">;
</span><span style="color: #008080;">15</span>  <span style="color: #0000ff;">string</span> versionstr = <span style="color: #800000;">"</span><span style="color: #800000;">?v=</span><span style="color: #800000;">"</span> + DateTime.Now.ToString(<span style="color: #800000;">"</span><span style="color: #800000;">yyyyMMddss</span><span style="color: #800000;">"</span><span style="color: #000000;">);
</span><span style="color: #008080;">16</span> 
<span style="color: #008080;">17</span>  <span style="color: #0000ff;">if</span> (link != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
</span><span style="color: #008080;">18</span> <span style="color: #000000;"> {
</span><span style="color: #008080;">19</span>                 <span style="color: #0000ff;">foreach</span> (HtmlNode categoryNode <span style="color: #0000ff;">in</span><span style="color: #000000;"> link)
</span><span style="color: #008080;">20</span> <span style="color: #000000;">                {
</span><span style="color: #008080;">21</span>                     <span style="color: #0000ff;">string</span> href = categoryNode.Attributes[<span style="color: #800000;">"</span><span style="color: #800000;">href</span><span style="color: #800000;">"</span><span style="color: #000000;">].Value;
</span><span style="color: #008080;">22</span>                     <span style="color: #0000ff;">if</span> (href.IndexOf(<span style="color: #800000;">"</span><span style="color: #800000;">?</span><span style="color: #800000;">"</span>) &gt; <span style="color: #800080;">0</span><span style="color: #000000;">)
</span><span style="color: #008080;">23</span> <span style="color: #000000;">                    {
</span><span style="color: #008080;">24</span>                         href = href.Substring(<span style="color: #800080;">0</span>, href.IndexOf(<span style="color: #800000;">"</span><span style="color: #800000;">?</span><span style="color: #800000;">"</span><span style="color: #000000;">));
</span><span style="color: #008080;">25</span> <span style="color: #000000;">                    }
</span><span style="color: #008080;">26</span>                     href +=<span style="color: #000000;"> versionstr;
</span><span style="color: #008080;">27</span>                     newcontent += <span style="color: #800000;">"</span><span style="color: #800000;">&lt;link type=\"text/css\" rel=\"stylesheet\" href=\"</span><span style="color: #800000;">"</span> + href + <span style="color: #800000;">"</span><span style="color: #800000;">\" /&gt;\r\n</span><span style="color: #800000;">"</span><span style="color: #000000;">;
</span><span style="color: #008080;">28</span> <span style="color: #000000;">                }
</span><span style="color: #008080;">29</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">30</span> 
<span style="color: #008080;">31</span> 
<span style="color: #008080;">32</span>             <span style="color: #0000ff;">if</span> (script != <span style="color: #0000ff;">null</span><span style="color: #000000;">)
</span><span style="color: #008080;">33</span> <span style="color: #000000;">            {
</span><span style="color: #008080;">34</span>                 <span style="color: #0000ff;">foreach</span> (HtmlNode categoryNode <span style="color: #0000ff;">in</span><span style="color: #000000;"> script)
</span><span style="color: #008080;">35</span> <span style="color: #000000;">                {
</span><span style="color: #008080;">36</span>                     <span style="color: #0000ff;">string</span> src = categoryNode.Attributes[<span style="color: #800000;">"</span><span style="color: #800000;">src</span><span style="color: #800000;">"</span><span style="color: #000000;">].Value;
</span><span style="color: #008080;">37</span>                     <span style="color: #0000ff;">if</span> (src.IndexOf(<span style="color: #800000;">"</span><span style="color: #800000;">?</span><span style="color: #800000;">"</span>) &gt; <span style="color: #800080;">0</span><span style="color: #000000;">)
</span><span style="color: #008080;">38</span> <span style="color: #000000;">                    {
</span><span style="color: #008080;">39</span>                         src = src.Substring(<span style="color: #800080;">0</span>, src.IndexOf(<span style="color: #800000;">"</span><span style="color: #800000;">?</span><span style="color: #800000;">"</span><span style="color: #000000;">));
</span><span style="color: #008080;">40</span> <span style="color: #000000;">                    }
</span><span style="color: #008080;">41</span>                     src +=<span style="color: #000000;"> versionstr;
</span><span style="color: #008080;">42</span>                     newcontent += <span style="color: #800000;">"</span><span style="color: #800000;">&lt;script src=\"</span><span style="color: #800000;">"</span> + src + <span style="color: #800000;">"</span><span style="color: #800000;">\"&gt;&lt;/script&gt;\r\n</span><span style="color: #800000;">"</span><span style="color: #000000;">;
</span><span style="color: #008080;">43</span> <span style="color: #000000;">                }
</span><span style="color: #008080;">44</span> 
<span style="color: #008080;">45</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">46</span> 
<span style="color: #008080;">47</span>             <span style="color: #0000ff;">if</span> (newcontent.Length == <span style="color: #800080;">0</span><span style="color: #000000;">)
</span><span style="color: #008080;">48</span> <span style="color: #000000;">            {
</span><span style="color: #008080;">49</span>                 newcontent =<span style="color: #000000;"> versionstr;
</span><span style="color: #008080;">50</span> <span style="color: #000000;">            }
</span><span style="color: #008080;">51</span> 
<span style="color: #008080;">52 </span>selection.Insert(newcontent, (<span style="color: #0000ff;">int</span>)vsInsertFlags.vsInsertFlagsCollapseToEnd);<span style="color: #008000;">//</span><span style="color: #008000;">重新写入文档</span></pre>
</div>
<p>&nbsp;</p>
<p>&nbsp;　　</p>
<p>　　再上几张最后的效果图，有图有真像，后面还有代码哦（至于最后用HJ这个图标，就是为了给媳妇邀功&nbsp;\\*^o^*//&nbsp;)。</p>
<p>　　<img src="https://images2015.cnblogs.com/blog/88102/201607/88102-20160717145135357-1176806157.png" alt="" /></p>
<p>&nbsp;</p>
<p>　　<img src="https://images2015.cnblogs.com/blog/88102/201607/88102-20160717145415654-1974328402.gif" alt="" /></p>
<p>　　　　　　　　　　　　　　(选择一行) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>
<p>　　<img src="https://images2015.cnblogs.com/blog/88102/201607/88102-20160717145542529-620015045.gif" alt="" /></p>
<p>　　　　　　　　　 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;(选择多行，包含link,script标签) &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>
<p>　　　　　　　　　　　　　　　　</p>
<h1 class="postTitle">结语</h1>
<p>　　虽然这个插件功能非常简单，但是整理这个开发的过程还是用了好几个晚上。个人觉得还是蛮实用的（至少对我们开发，还是非常有帮助的），特来分享给大家（后面有安装文件和源码）。</p>
<p>　　觉得有帮助呢，动动手指点个赞，图个高兴；觉得写得不好，也接受拍砖哈；写得不正确的地方，请不吝赐教下哈，共同进步！</p>
<p>　　安装文件，<a href="http://files.cnblogs.com/files/jijunjian/cachekiller.rar" target="_blank">点击下载（VS2015开发的，不能安装的话，自行编译哈）</a></p>
<p>　　源代码，压缩后还有11M，只能上传CSDN了，免积分哦。<a href="http://download.csdn.net/download/jijunjian/9578321" target="_blank">点击下载</a>。</p>
<p>&nbsp;</p>
<p>　　&nbsp;成为一名优秀的程序员！</p>
<p>&nbsp;</p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2016-07-18 08:50</span>&nbsp;
<a href="https://www.cnblogs.com/jijunjian/">2J</a>&nbsp;
阅读(<span id="post_view_count">...</span>)&nbsp;
评论(<span id="post_comment_count">...</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=5678003" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(5678003);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 139716, cb_blogApp = 'jijunjian', cb_blogUserGuid = '3f24f67b-fea0-de11-ba8f-001cf0cd104b';
    var cb_entryId = 5678003, cb_entryCreatedDate = '2016-07-18 08:50', cb_postType = 1; 
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>

<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <script async="async" src="https://www.googletagservices.com/tag/js/gpt.js"></script>
    <script>
        var googletag = googletag || {};
        googletag.cmd = googletag.cmd || [];
    </script>
    <script>
        googletag.cmd.push(function () {
            googletag.defineSlot("/1090369/C1", [300, 250], "div-gpt-ad-1546353474406-0").addService(googletag.pubads());
            googletag.defineSlot("/1090369/C2", [468, 60], "div-gpt-ad-1539008685004-0").addService(googletag.pubads());
            googletag.pubads().enableSingleRequest();
            googletag.enableServices();
        });
    </script>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id="div-gpt-ad-1546353474406-0" style="height:250px; width:300px;"></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id="div-gpt-ad-1539008685004-0" style="height:60px; width:468px;">
            <script>
                if (new Date() >= new Date(2018, 9, 13)) {
                    googletag.cmd.push(function () { googletag.display("div-gpt-ad-1539008685004-0"); });
                }
            </script>
        </div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverAdT2();
        deliverAdC1();
        deliverAdC2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 2J
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>